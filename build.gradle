version = '1.0'

buildscript {
  apply from: 'gradle/scripts/repositories.gradle'

  buildscript.repositories.addAll(project.repositories)

  dependencies {
    classpath 'gradle.plugin.com.palantir:jacoco-coverage:0.3.0'
    classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
    classpath 'com.moowork.gradle:gradle-node-plugin:1.1.1'
  }
}

configurations.all {
  exclude group: 'org.slf4j', module: 'slf4j-log4j12'
  exclude group: 'log4j'

  resolutionStrategy {
      dependencySubstitution {
          substitute module('org.slf4j:slf4j-log4j12') with module('ch.qos.logback:logback-classic:1.1.7')
          //prefer 'log4j-over-slf4j' over 'log4j'
      }
  }
}

subprojects {
  apply plugin: 'java'

  task excludegroup(type: Test) {
    useTestNG() {
      excludeGroups 'needConfig'
    }

    testLogging {
      showStandardStreams = true
    }
  }

  task buildWithWarning(type: JavaCompile, dependsOn: build) {
    compileJava.options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
  }
}

apply from: 'gradle/scripts/coverage.gradle'
apply from: 'gradle/scripts/dependency.gradle'
apply from: 'gradle/scripts/ide.gradle'
apply from: 'gradle/scripts/license.gradle'

task wrapper(type: Wrapper) {
  gradleVersion = '2.14'
}

if (project.hasProperty('overrideBuildEnvironment')) {
  //The property is automatically passed to the Gradle build when the project is built at LinkedIn
  //The property contains the file path to a script plugin that 'adapts' this OS project to LinkedIn
  //In order to adapt the project, we need to apply this script plugin:
  apply from: project.overrideBuildEnvironment
}
