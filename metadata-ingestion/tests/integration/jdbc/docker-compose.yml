version: '3.8'
services:
  postgres:
    container_name: testpostgres
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    ports:
      - "45432:5432"
    networks:
      jdbc-network:
    volumes:
      - ./setup/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    container_name: testmysql
    image: mysql:8.0
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: test
    ports:
      - "43306:3306"
    networks:
      jdbc-network:
    volumes:
      - ./setup/mysql:/docker-entrypoint-initdb.d


  mssql:
    container_name: testmssql
    image: mcr.microsoft.com/mssql/server:2019-latest
    platform: linux/amd64
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Password123!
      MSSQL_PID: Developer
    ports:
      - "41433:1433"
    networks:
      jdbc-network:
    volumes:
      - ./setup/mssql/init.sql:/setup/init.sql
      - ./setup/mssql/entrypoint.sh:/setup/entrypoint.sh
    command: /bin/bash /setup/entrypoint.sh
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Password123!" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  jdbc-network: