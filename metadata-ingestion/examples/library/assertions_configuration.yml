# id: sample_data_contract # Optional: if not provided, an id will be generated
version: 1
assertions:
  #  - type: freshness
  #    entity: urn:li:dataset:(urn:li:dataPlatform:snowflake,long_tail_companions.adoption.adoptions,PROD)
  #    freshness_schedule_type: cron
  #    cron: "4 8 * * 1-3"
  #    schedule:
  #      type: cron
  #      cron: "0 * * * *"
  #  - type: volume
  #    entity: urn:li:dataset:(urn:li:dataPlatform:snowflake,long_tail_companions.adoption.adoptions,PROD)
  #    volume_metric: row_count_total
  #    operator:
  #      type: between
  #      min: 100
  #      max: 200
  #    meta:
  #      entity_qualified_name: LONG_TAIL_COMPANIONS.ADOPTION.ADOPTIONS
  #      entity_schema:
  #        - col: pk
  #          native_type: NUMBER
  #    schedule:
  #      type: cron
  #      cron: "0 * * * *"
  - type: volume
    entity: urn:li:dataset:(urn:li:dataPlatform:snowflake,test_db.public.test_assertions_all_times,PROD) 
    volume_metric: row_count_total
    operator:
      type: between
      min: 5
      max: 15
    filter:
      type: sql
      sql: col_date >  TO_DATE('2024-05-10')
    schedule:
      type: on_table_change
  - type: custom_sql
    operand: metric
    entity: urn:li:dataset:(urn:li:dataPlatform:snowflake,test_db.public.test_assertions_all_times,PROD) 
    sql: select count(*) from TEST_DB.PUBLIC.TEST_ASSERTIONS_ALL_TIMES 
    operator:
      type: between
      min: 100
      max: 240
    schedule:
      type: on_table_change
  - type: field
    entity: urn:li:dataset:(urn:li:dataPlatform:snowflake,test_db.public.test_assertions_all_times,PROD) 
    operand: field_metric
    metric: unique_count
    field: col_date
    operator:
      type: between
      min: 20
      max: 40
    schedule:
      type: on_table_change
  - type: field
    entity: urn:li:dataset:(urn:li:dataPlatform:snowflake,test_db.public.test_assertions_all_times,PROD) 
    operand: field_values
    field: col_date
    operator:
      type: not_null
    fail_threshold:
      type: count
      value: 0
    schedule:
      type: on_table_change