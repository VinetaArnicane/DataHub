namespace com.linkedin.dataprocess

import com.linkedin.common.AuditStamp
import com.linkedin.common.CustomProperties
import com.linkedin.common.ExternalReference
import com.linkedin.common.Urn
import com.linkedin.common.JobFlowUrn
import com.linkedin.common.DataJobUrn

/**
 * The inputs and outputs of this data process
 */
@Aspect = {
  "name": "dataProcessInstanceProperties",
  "type": "timeseries",
}
record DataProcessInstanceProperties includes CustomProperties, ExternalReference {

  /**
   * Process name
   */
  @Searchable = {
    "fieldType": "TEXT_PARTIAL",
    "enableAutocomplete": true,
    "boostScore": 10.0
  }
  name: string

  /**
   * Process description
   */
  @Searchable = {
    "fieldType": "TEXT",
    "hasValuesFieldName": "hasDescription"
  }
  description: optional string

  /**
   * Execution Id which identifyies the pipeline run. In airflow this can be a dag run id.
   */
  @Searchable = {
    "fieldName": "executionId",
    "fieldType": "KEYWORD",
  }
  executionId: optional string

  /**
   * Process type
   */
  @Searchable = {
    "fieldType": "KEYWORD",
    "addToFilters": true,
    "filterNameOverride": "Process Type"
  }
  type: optional enum DataProcessType {
    BATCH_SCHEDULED,
    BATCH_AD_HOC,
    STREAMING,
  }

  /**
   * The parent entity whose run instance it is
   */
  @Relationship = {
      "name": "InstanceOf",
      "entityTypes": [ "DataJobUrn", "DataFlowUrn" ]
  }
  @Searchable = {
    "/*": {
      "fieldName": "parentTemplate",
      "fieldType": "URN",
      "queryByDefault": false
    }
  }
  parentTemplate: optional Urn

  /**
   * The parent DataProcessInstance where it belongs to.
   * If it is a Airflow Task then it should belong to an Airflow Dag run as well
   * which will be another DataProcessInstance
   */
  @Relationship = {
      "name": "ChildOf",
      "entityTypes": [ "DataProcessInstance" ]
  }
  @Searchable = {
    "/*": {
      "fieldName": "parentInstance",
      "fieldType": "URN",
      "queryByDefault": false
    }
  }
  parentInstance: optional Urn

  /**
  * Audit stamp containing who reported the lineage and when
  */
  created: AuditStamp

}