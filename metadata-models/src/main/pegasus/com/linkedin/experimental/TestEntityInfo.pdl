namespace com.linkedin.experimental

import com.linkedin.common.ChangeAuditStamps
import com.linkedin.common.Time
import com.linkedin.common.Url
import com.linkedin.common.Urn
import com.linkedin.common.CustomProperties
import com.linkedin.common.ExternalReference

/**
 * Information about a test entity
 */
@Aspect = {
  "name": "testEntityInfo"
}
record TestEntityInfo includes CustomProperties, ExternalReference {

  /**
   * Title of the test entity
   */
  @Searchable = {
    "fieldName": "title",
    "indexSettings": [{ "indexType": "KEYWORD" }, { "indexType": "TEXT" }, { "indexType": "PARTIAL" }]
  }
  title: string

  /**
   *
   */
   @Searchable = {
     "/*": {
      "fieldName": "aliases"
      "indexSettings": [{ "indexType": "KEYWORD" }, { "indexType": "PARTIAL" }, { "indexType": "TEXT" }, { "indexType": "BOOLEAN", "overrideFieldName": "hasAliases" }, { "indexType": "COUNT", "overrideFieldName": "numAliases" }]
     }
   }
   aliases: array[string]

   recordAliases: array[record AliasRecord {
     @Searchable = {
       "fieldName": "aliasRecords",
       "indexSettings": [{ "indexType": "KEYWORD" }, { "indexType": "TEXT" }, { "indexType": "BOOLEAN", "overrideFieldName": "hasAliasRecords" }]
     }
     name: string
   }]

   @Relationship = {
     "/*": {
      "name": "OwnedBy",
      "entityTypes": [ "corpUser", "corpGroup" ]
     }
   }
   foreignKeyArray: array[Urn]

   @Relationship = {
     "name": "IsPartOf",
     "entityTypes": [ "dataset" ]
   }
   foreignKey: Urn

  @Searchable = {
    "fieldName": "description",
    "indexSettings": [{ "indexType": "TEXT" }]
  }
  description: string

  /**
   * Captures information about who created/last modified/deleted this chart and when
   */
  lastModified: ChangeAuditStamps

  /**
   * URL for the test entity. This could be used as an external link on DataHub to allow users access/view the chart
   */
  url: optional Url

  /**
   * Test Entity inputs
   */
  inputs: optional array[Input]

  /**
   * Type of the chart
   */
  @Searchable = {
    "fieldName": "chartType",
    "indexSettings": [{ "indexType": "KEYWORD" }]
  }
  type: optional enum ChartTypeOption {
    TYPE_1
    TYPE_2
  }

  /**
   * The time when this test entity was last refreshed
   */
  lastRefreshed: optional Time

}
