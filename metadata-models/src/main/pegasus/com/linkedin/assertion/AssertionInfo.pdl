namespace com.linkedin.assertion

import com.linkedin.common.CustomProperties
import com.linkedin.common.ExternalReference
import com.linkedin.common.Urn

/**
 * Information about an assertion
 */
@Aspect = {
  "name": "assertionInfo"
}
record AssertionInfo includes CustomProperties, ExternalReference {
    /**
    * Type of assertion
    */
    type: enum AssertionType {
      DATASET_COLUMN
      DATASET_ROWS
      DATASET_SCHEMA
      CROSS_DATASET
    }

    /**
    * Assertion details for scope DATASET_COLUMN
    */
    datasetColumnAssertion: optional DatasetColumnAssertion

    /**
    * Assertion details for scope DATASET_ROWS
    */
    datasetRowsAssertion: optional DatasetRowsAssertion

    /**
    * Assertion details for scope DATASET_SCHEMA
    */
    datasetSchemaAssertion: optional DatasetSchemaAssertion

    /**
    * One or more dataset schema fields that are targeted by this assertion
    */
    @Relationship = {
      "/*": {
        "name": "Asserts",
        "entityTypes": [ "schemaField" ]
      }
    }
    datasetFields: optional array[Urn]

    /**
    * One or more datasets that are targeted by this assertion
    */
    @Relationship = {
      "/*": {
        "name": "Asserts",
        "entityTypes": [ "dataset" ]
      }
    }
    datasets: optional array[Urn]

    /*
    * Logic for assertion such as implementation of custom nativeOperator
    */
    logic: optional string

    /**
    * Parameters required for the assertion. e.g. min_value, max_value, value, columns
    */
    parameters: map[string, string] = { }
}