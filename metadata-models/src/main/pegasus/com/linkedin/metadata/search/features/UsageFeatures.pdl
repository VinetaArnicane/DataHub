namespace com.linkedin.metadata.search.features

@Aspect = {
  "name": "usageFeatures"
}
record UsageFeatures {
  /**
   * Usage count in the last 30 days
   */
  @SearchScore = {
    "modifier": "LOG"
  }
  usageCountLast30Days: optional long
  
  /**
   * Percentile rank of the dataset based on the the last 30 days usage count on a platform
   */
  queryCountPercentileLast30Days: optional long
  
  /**
   * Overall rank of the dataset based on the the last 30 days usage count on a platform
   * It returns one plus the number of rows proceeding or equals to the current row in the ordering. 
   */
  queryCountRankLast30Days: optional long

  /**
   * Percentile rank of the dataset based on the the last 30 days of select queries by unique users on a platform
   */
  uniqueUserPercentileLast30Days: optional long
  
  /**
   * Overall rank of the dataset based on the the last 30 days of select queries by unique users on a platform
   * It returns one plus the number of rows proceeding or equals to the current row in the ordering. 
   */
  uniqueUserRankLast30Days: optional long

  /**
   * Percentile rank of the dataset based on the the last 30 days insert/update operation count on a platform
   */
  writeCountPercentileLast30Days: optional long
  
  /**
   * Overall rank of the dataset based on the the last 30 days insert/update operation count on a platform
   * It returns one plus the number of rows proceeding or equals to the current row in the ordering. 
   */
  writeCountRankLast30Days: optional long

  /**
   * Number of query per day for the last 30 days
   */
  queryCountLast30DaysDateHistogram: optional array[long]

  /**
   * Number of write operations per day for the last 30 days
   */
  writeCountLast30DaysDateHistogram: optional array[long]

  /**
   * Number of unique users per day for the last 30 days
   */
  uniqueUserCountLast30DaysDateHistogram: optional array[long]

  /**
   * Ranked list of the top 10 users in past 30 days
   */
  topUsers: optional array[Urn]
}
