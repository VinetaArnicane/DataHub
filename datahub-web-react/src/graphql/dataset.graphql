mutation updateDataset($input: DatasetUpdateInput!) {
    updateDataset(input: $input) {
        ...nonRecursiveDatasetFields
        downstreamLineage {
            ...downstreamRelationshipFields
        }
        upstreamLineage {
            ...upstreamRelationshipFields
        }
    }
}

query getDataProfiles($urn: String!, $count: Int, $range: TimeRange) {
    dataset(urn: $urn) {
        urn
        dataProfiles(count: $count, range: $range) {
            rowCount
            columnCount
            timestampMillis
            partitionSpec {
                partition
            }
            fieldProfiles {
                fieldPath
                uniqueCount
                uniqueProportion
                nullCount
                nullProportion
                min
                max
                mean
                median
                stdev
                sampleValues
            }
        }
    }
}

query getDataset($urn: String!) {
    dataset(urn: $urn) {
        ...nonRecursiveDatasetFields
        downstreamLineage {
            ...downstreamRelationshipFields
        }
        upstreamLineage {
            ...upstreamRelationshipFields
        }
        schemaMetadata(version: 0) {
            ...schemaMetadataFields
        }
        previousSchemaMetadata: schemaMetadata(version: -1) {
            ...schemaMetadataFields
        }
        editableSchemaMetadata {
            editableSchemaFieldInfo {
                fieldPath
                description
                globalTags {
                    ...globalTagsFields
                }
            }
        }
        deprecation {
            actor
            deprecated
            note
            decommissionTime
        }
        globalTags {
            ...globalTagsFields
        }
        downstreamLineage {
            ...downstreamRelationshipFields
        }
        glossaryTerms {
            ...glossaryTerms
        }
        upstreamLineage {
            ...upstreamRelationshipFields
        }
        usageStats(resource: $urn, range: MONTH) {
            buckets {
                bucket
                duration
                resource
                metrics {
                    uniqueUserCount
                    totalSqlQueries
                    topSqlQueries
                }
            }
            aggregations {
                uniqueUserCount
                totalSqlQueries
                users {
                    user {
                        urn
                        username
                    }
                    count
                    userEmail
                }
                fields {
                    fieldName
                    count
                }
            }
        }
        dataProfiles(count: 1) {
            rowCount
            columnCount
            timestampMillis
            partitionSpec {
                partition
            }
            fieldProfiles {
                fieldPath
                uniqueCount
                uniqueProportion
                nullCount
                nullProportion
                min
                max
                mean
                median
                stdev
                sampleValues
            }
        }
    }
}

query getDatasetSchemaVersions($urn: String!, $version1: Long, $version2: Long) {
    dataset(urn: $urn) {
        urn
        name
        type
        origin
        description
        uri
        schemaMetadata(version: $version1) {
            ...schemaMetadataFields
        }
        previousSchemaMetadata: schemaMetadata(version: $version2) {
            ...schemaMetadataFields
        }
        editableSchemaMetadata {
            editableSchemaFieldInfo {
                fieldPath
                description
                globalTags {
                    ...globalTagsFields
                }
            }
        }
    }
}
