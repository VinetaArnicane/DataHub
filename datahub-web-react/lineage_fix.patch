diff --git a/datahub-web-react/src/app/lineage/utils/layoutTree.ts b/datahub-web-react/src/app/lineage/utils/layoutTree.ts
index cc70400704..4d34103b9d 100644
--- a/datahub-web-react/src/app/lineage/utils/layoutTree.ts
+++ b/datahub-web-react/src/app/lineage/utils/layoutTree.ts
@@ -32,6 +32,20 @@ function getParentRelationship(direction: Direction, parent: VizNode | null, nod
     return directionRelationships?.find((r) => r?.entity?.urn === node?.urn);
 }
 
+function firstAppearanceIndices(arr) {
+    const seen = new Set(); // To track which strings have been seen
+    const result = [] as number[];
+
+    for (let i = 0; i < arr.length; i++) {
+        if (!seen.has(arr[i])) {
+            seen.add(arr[i]); // Add the string to the set
+            result.push(i); // Save the index
+        }
+    }
+
+    return result;
+}
+
 function layoutNodesForOneDirection(
     data: NodeData,
     direction: Direction,
@@ -54,12 +68,10 @@ function layoutNodesForOneDirection(
     while (nodesInCurrentLayer.length > 0) {
         // if we've already added a node to the viz higher up dont add it again
         const urnsToAddInCurrentLayer = Array.from(new Set(nodesInCurrentLayer.map(({ node }) => node.urn || '')));
-        const nodesToAddInCurrentLayer = urnsToAddInCurrentLayer
-            .filter((urn, pos) => urnsToAddInCurrentLayer.indexOf(urn) === pos)
-            .filter((urn) => !nodesByUrn[urn || '']);
+        const positionsToAddInCurrentLayer = firstAppearanceIndices(urnsToAddInCurrentLayer);
 
         const filteredNodesInCurrentLayer = nodesInCurrentLayer
-            .filter(({ node }) => nodesToAddInCurrentLayer.indexOf(node.urn || '') > -1)
+            .filter((_, idx) => positionsToAddInCurrentLayer.indexOf(idx) > -1)
             .filter(({ node }) => node.status?.removed !== true);
 
         const layerSize = filteredNodesInCurrentLayer.length;
