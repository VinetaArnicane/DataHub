schema {
    query: Query
}

type Query {
    dataset(urn: String): Dataset
}

enum OwnershipSourceType {
    AUDIT
    DATABASE
    FILE_SYSTEM
    ISSUE_TRACKING_SYSTEM
    MANUAL
    SERVICE
    SOURCE_CONTROL
    OTHER
}

type OwnershipSource {
  """
    The type of the source
  """
  type: OwnershipSourceType!

  """
    A reference URL for the source
  """
  url: String
}

enum OwnershipType {
    """
      A person or group that is in charge of developing the code
    """
    DEVELOPER

    """
      A person or group that is owning the data
    """
    DATAOWNER

    """
      A person or a group that overseas the operation, e.g. a DBA or SRE.
    """
    DELEGATE

    """
      A person, group, or service that produces/generates the data
    """
    PRODUCER

    """
      A person, group, or service that consumes the data
    """
    CONSUMER

    """
      A person or a group that has direct business interest
    """
    STAKEHOLDER
}

type Owner {
    """
     Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:product:product_name
    """
    owner: CorpUser!

    """
     The type of the ownership
    """
    type: OwnershipType

    """
     Source information for the ownership
    """
    source: OwnershipSource
}

type Ownership {

    owners: [Owner]

    lastModified: Long!
}

enum FabricType {
    """
      Designates development fabrics
    """
    DEV

    """
      Designates early-integration (staging) fabrics
    """
    EI

    """
      Designates production fabrics
    """
    PROD

    """
      Designates corporation fabrics
    """
    CORP
}

enum PlatformNativeType {
    """
      Table
    """
    TABLE

    """
      View
    """
    VIEW

    """
      Directory in file system
    """
    DIRECTORY

    """
      Stream
    """
    STREAM

    """
      Bucket in key value store
    ""
    BUCKET
}

type PropertyTuple {
    key: String!
    value: String
}

type Dataset {

    urn: String!

    platform: String!

    name: String!

    origin: FabricType

    description: String

    uri: String

    platformNativeType: PlatformNativeType

    tags: [String]!

    properties: [PropertyTuple]

    createdTime: Long!

    modifiedTime: Long!

    ownership: Ownership
}

type CorpUserInfo {

    active: Boolean!

    displayName: String

    email: String!

    title: String

    manager: CorpUser

    departmentId: Long

    departmentName: String

    firstName: String

    lastName: String

    fullName: String

    countryCode: String
}

type CorpUserEditableInfo {

    aboutMe: String

    teams: [String]

    skills: [String]

    pictureLink: String
}

type CorpUser {

    username: String!

    info: CorpUserInfo

    editableInfo: CorpUserEditableInfo
}