# DataHub UI Application-Specific GraphQL Types

extend type Query {
  """
  List all secrets stored in DataHub
  """
  listSecrets(input: ListSecretsInput!): ListSecretsResult

  """
  List all ingestion sources
  """
  listIngestionSources(input: ListIngestionSourcesInput!): ListIngestionSourcesResult
}

extend type Mutation {
  """
  Create a new Secret
  """
  createSecret(input: CreateSecretInput!): String

  """
  Delete a Secret
  """
  deleteSecret(urn: String!): String

  """
  Create a new ingestion source
  """
  createIngestionSource(input: UpdateIngestionSourceInput!): String

  """
  Update an existing ingestion source
  """
  updateIngestionSource(urn: String!, input: UpdateIngestionSourceInput!): String

  """
  Delete an existing ingestion source
  """
  deleteIngestionSource(urn: String!): String
}

"""
Input for listing DataHub Secrets
"""
input ListSecretsInput {
  """
  The starting offset of the result set
  """
  start: Int

  """
  The number of results to be returned
  """
  count: Int
}

"""
A referencible secret stored in DataHub's system. Notice that we do not return the actual secret value.
"""
type Secret {
  """
  The urn of the secret
  """
  urn: String!

  """
  The name of the secret
  """
  displayName: String!
}

"""
Input for listing DataHub Secrets
"""
type ListSecretsResult {
  """
  The starting offset of the result set
  """
  start: Int

  """
  The number of results to be returned
  """
  count: Int

  """
  The total number of results in the result set
  """
  total: Int

  """
  The secrets themselves
  """
  secrets: [Secret!]!
}

"""
The type of an ingestion source
"""
enum IngestionSourceType {
  """
  Ingestion Source that uses a raw recipe as input.
  """
  RECIPE
}

"""
A schedule associated with an Ingestion Source
"""
type IngestionSchedule {
  """
  The start time associated with the schedule
  """
  startTimeMs: Long!

  """
  The end time associated with the schedule
  """
  endTimeMs: Long!

  """
  The cron-formatted interval to execute the ingestion source on
  """
  interval: String!
}

"""
A schedule associated with an Ingestion Source
"""
type IngestionRecipe {
  """
  A json-ified representation of a normal ingestion recipe YML
  """
  json: String!
}

"""
A set of configurations for an Ingestion Source
"""
type IngestionConfig {
  """
  The recipe to use for ingestion
  """
  recipe: IngestionRecipe
}

"""
An Ingestion Source Entity
"""
type IngestionSource {
  """
  The primary key of the Ingestion Source
  """
  urn: String!

  """
  The type of the Ingestion Source
  """
  type: IngestionSourceType!

  """
  The display name of the Ingestion Source
  """
  displayName: String!

  """
  An optional schedule associated with the Ingestion Source
  """
  schedule: IngestionSchedule

  """
  An type-specific set of configurations for the ingestion source
  """
  config: IngestionConfig!
}

"""
Input arguments for listing Ingestion Sources
"""
input ListIngestionSourcesInput {
  """
  The starting offset of the result set
  """
  start: Int

  """
  The number of results to be returned
  """
  count: Int
}

"""
Results returned when listing ingestion sources
"""
type ListIngestionSourcesResult {
  """
  The starting offset of the result set
  """
  start: Int!

  """
  The number of results to be returned
  """
  count: Int!

  """
  The total number of results in the result set
  """
  total: Int!

  """
  The Ingestion Sources themselves
  """
  ingestionSources: [IngestionSource!]!
}


"""
Input parameters for creating / updating an Ingestion Source
"""
input UpdateIngestionSourceRecipeInput {
  """
  A raw recipe.yml file represented as a JSON string
  """
  json: String!
}

"""
Input parameters for creating / updating an Ingestion Source
"""
input UpdateIngestionSourceConfigInput {
  """
  Recipe configurations to use with the Ingestion Source
  """
  recipe: UpdateIngestionSourceRecipeInput
}

"""
Input arguments for creating / updating the schedule of an Ingestion Source
"""
input UpdateIngestionSourceScheduleInput {
  """
  The epoch (ms) Date Time when the job should start
  """
  startTimeMs: Long!

  """
  The epoch (ms) Date Time when the job should end
  """
  endTimeMs: Long!

  """
  The cron-formatted inverval describing when the job should be executed
  """
  interval: String!
}

"""
Input arguments for creating / updating an Ingestion Source
"""
input UpdateIngestionSourceInput {
  """
  A name associated with the ingestion source
  """
  displayName: String!

  """
  The type of the Ingestion Source
  """
  type: IngestionSourceType!

  """
  An optional description associated with the ingestion source
  """
  description: String

  """
  An optional schedule for the ingestion source. If not provided, the source is only available for run on-demand.
  """
  schedule: UpdateIngestionSourceScheduleInput

  """
  A set of type-specific ingestion source configurations
  """
  config: UpdateIngestionSourceConfigInput!
}

"""
Input arguments for creating a new Secret
"""
input CreateSecretInput {
  """
  The name of the secret for reference in ingestion recipes
  """
  displayName: String!

  """
  The value of the secret, to be encrypted and stored
  """
  value: String!
}
