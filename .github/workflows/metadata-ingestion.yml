name: metadata ingestion
on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/metadata-ingestion.yml"
      - "metadata-ingestion/**"
      - "metadata-models/**"
  pull_request:
    branches:
      - master
    paths:
      - ".github/**"
      - "metadata-ingestion/**"
      - "metadata-models/**"
  release:
    types: [published, edited]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  metadata-ingestion:
    runs-on: ubuntu-latest
    env:
      SPARK_VERSION: 3.0.3
      DATAHUB_TELEMETRY_ENABLED: false
      # TODO: Enable this once the test is fixed.
      # DATAHUB_LOOKML_GIT_TEST_SSH_KEY: ${{ secrets.DATAHUB_LOOKML_GIT_TEST_SSH_KEY }}
    strategy:
      matrix:
        python-version: ["3.7", "3.10"]
        command:
          [
            "lint",
            "testQuick",
            "testIntegration",
            "testIntegrationBatch1",
            "testSlowIntegration",
          ]
        include:
          - python-version: "3.7"
            extraPythonRequirement: "sqlalchemy==1.3.24 apache-airflow~=2.2.0"
          - python-version: "3.10"
            extraPythonRequirement: "sqlalchemy~=1.4.0 apache-airflow>=2.4.0"
          - python-version: "3.10"
            command: "buildWheel"
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: ./metadata-ingestion/scripts/install_deps.sh
      - name: Calculate pip install plan
        id: "packages_checksum"
        run: |
          cd metadata-ingestion
          pip install pip -U # only 22.2 and above contains the --dry-run flag

          # only the last line of the output is the packages that will be installed
          pip install --dry-run -e .[dev]  ${{ matrix.extraPythonRequirement }} | tail -n 1 > /tmp/would_be_installed.txt
          cat /tmp/would_be_installed.txt

          CHECKSUM=$(shasum /tmp/would_be_installed.txt | awk '{print $1}')
          echo "packages_checksum=$CHECKSUM" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: cache-venv
        with:
          path: ./metadata-ingestion/venv/
          key: ${{ runner.os }}-venv-${{ steps.packages_checksum.outputs.packages_checksum }}-${{ matrix.python-version }}
      - name: Run metadata-ingestion tests (extras ${{ matrix.extraPythonRequirement }})
        if: ${{ matrix.command != 'buildWheel' }}
        run: ./gradlew -Pextra_pip_requirements='${{ matrix.extraPythonRequirement }}' :metadata-ingestion:${{ matrix.command }}
      - name: Build python wheels
        if: ${{ matrix.command == 'buildWheel' }}
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          LOCAL_VERSION_TAG=$(echo ${GITHUB_REF} | sed -e "s,refs/heads/master,commit${SHORT_SHA},g" -e 's,refs/tags/,,g' -e 's,refs/pull/\([0-9]*\).*,pr\1,g')
          echo "LOCAL_VERSION_TAG: $LOCAL_VERSION_TAG"
          RELEASE_VERSION="0.0.0.dev0+${LOCAL_VERSION_TAG}" ./gradlew ${{ matrix.command }}
      - name: Upload python wheels
        uses: actions/upload-artifact@v3
        if: ${{ matrix.command == 'buildWheel' }}
        with:
          name: Python wheels
          path: |
            metadata-ingestion/dist/**
            metadata-ingestion-modules/airflow-plugin/dist/**
      - name: pip freeze show list installed
        if: always()
        run: source metadata-ingestion/venv/bin/activate && pip freeze
      - uses: actions/upload-artifact@v3
        if: ${{ always() && matrix.command != 'lint' && matrix.command != 'buildWheel' }}
        with:
          name: Test Results (metadata ingestion ${{ matrix.python-version }})
          path: |
            **/build/reports/tests/test/**
            **/build/test-results/test/**
            **/junit.*.xml

  event-file:
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}
