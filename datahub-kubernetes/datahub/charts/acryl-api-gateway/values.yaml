# Default values for datahub-frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: LoadBalancer
  port: 8089

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths: []
      redirectPaths: []
  tls: []

# Extra environment variables
# This will be appended to the current 'env:' key. You can use any of the kubernetes env
# syntax here
extraEnvs: []

extraVolumes: []

extraVolumeMounts: []

extraInitContainers: []

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 4

readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 4

global:
  elasticsearch:
    host: "elasticsearch"
    port: "9200"

  kafka:
    bootstrap:
      server: "broker:29092"
    schemaregistry:
      url: "http://schema-registry:8081"

  neo4j:
    host: "neo4j:7474"
    uri: "bolt://neo4j"
    username: "neo4j"
    password:
      secretRef: "neo4j-secrets"
      secretKey: "neo4j-password"

  sql:
    datasource:
      host: "mysql:3306"
      url: "jdbc:mysql://mysql:3306/datahub?verifyServerCertificate=false&useSSL=true"
      driver: "com.mysql.jdbc.Driver"
      username: "datahub"
      password:
        secretRef: "mysql-secrets"
        secretKey: "mysql-password"

  datahub:
    gms:
      port: "8080"
    frontend:
      port: "9002"
    appVersion: "1.0"