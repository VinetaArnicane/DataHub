# Docker compose file for DataHub Lightweight
# 
# This configuration provides a minimal setup of DataHub with:
# - Redpanda (instead of Kafka + Zookeeper + Schema Registry)
# - MySQL/MariaDB database
# - Elasticsearch
---
services:
  datahub-frontend-react:
    hostname: datahub-frontend-react
    image: ${DATAHUB_FRONTEND_IMAGE:-acryldata/datahub-frontend-react}:${DATAHUB_VERSION:-head}
    ports:
    - ${DATAHUB_MAPPED_FRONTEND_PORT:-9002}:9002
    build:
      context: ../
      dockerfile: docker/datahub-frontend/Dockerfile
    env_file: datahub-frontend/env/docker.env
    environment:
      - KAFKA_BOOTSTRAP_SERVER=redpanda:9092
      - KAFKA_SCHEMAREGISTRY_URL=http://redpanda:8081
    depends_on:
      datahub-gms:
        condition: service_healthy
    volumes:
    - ${HOME}/.datahub/plugins:/etc/datahub/plugins

  datahub-gms:
    hostname: datahub-gms
    image: ${DATAHUB_GMS_IMAGE:-acryldata/datahub-gms}:${DATAHUB_VERSION:-head}
    ports:
    - ${DATAHUB_MAPPED_GMS_PORT:-8080}:8080
    build:
        context: ../
        dockerfile: docker/datahub-gms/Dockerfile
    env_file: datahub-gms/env/docker-without-neo4j.env
    environment:
      - KAFKA_BOOTSTRAP_SERVER=redpanda:9092
      - KAFKA_SCHEMAREGISTRY_URL=http://redpanda:8081
      - KAFKA_CONSUMER_STOP_ON_DESERIALIZATION_ERROR=${KAFKA_CONSUMER_STOP_ON_DESERIALIZATION_ERROR:-true}
      - METADATA_SERVICE_AUTH_ENABLED=${METADATA_SERVICE_AUTH_ENABLED:-false}
      # Ensure Elasticsearch indices are created properly
      - ELASTICSEARCH_INDEX_BUILDER_MAPPINGS_REINDEX=true
      - ELASTICSEARCH_INDEX_BUILDER_SETTINGS_REINDEX=true
    healthcheck:
      test: curl -sS --fail http://datahub-gms:${DATAHUB_GMS_PORT:-8080}/health
      start_period: 90s
      interval: 1s
      retries: 3
      timeout: 5s
    depends_on:
      elasticsearch-setup:
        condition: service_completed_successfully
      redpanda:
        condition: service_healthy
      mysql-setup:
        condition: service_completed_successfully
    volumes:
    - ${HOME}/.datahub/plugins:/etc/datahub/plugins

  datahub-upgrade:
    hostname: datahub-upgrade
    image: ${DATAHUB_UPGRADE_IMAGE:-acryldata/datahub-upgrade}:${DATAHUB_VERSION:-head}
    command:
    - -u
    - SystemUpdate
    build:
      context: ../
      dockerfile: docker/datahub-upgrade/Dockerfile
    env_file: datahub-upgrade/env/docker-without-neo4j.env
    environment:
      - KAFKA_BOOTSTRAP_SERVER=redpanda:9092
      - KAFKA_SCHEMAREGISTRY_URL=http://redpanda:8081
      # Ensure all indices are created during system upgrade
      - ELASTICSEARCH_INDEX_BUILDER_MAPPINGS_REINDEX=true
      - ELASTICSEARCH_INDEX_BUILDER_SETTINGS_REINDEX=true
    depends_on:
      elasticsearch-setup:
        condition: service_completed_successfully
      kafka-setup:
        condition: service_completed_successfully
      mysql-setup:
        condition: service_completed_successfully
    labels:
      datahub_setup_job: true

  # Pre-create Elasticsearch indices
  elasticsearch-setup:
    hostname: elasticsearch-setup
    image: ${DATAHUB_ELASTIC_SETUP_IMAGE:-acryldata/datahub-elasticsearch-setup}:${DATAHUB_VERSION:-head}
    build:
      context: ../
      dockerfile: docker/elasticsearch-setup/Dockerfile
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_USE_SSL=false
      - ELASTICSEARCH_INDEX_BUILDER_MAPPINGS_REINDEX=true
      - ELASTICSEARCH_INDEX_BUILDER_SETTINGS_REINDEX=true
    depends_on:
      elasticsearch:
        condition: service_healthy
    labels:
      datahub_setup_job: true

  kafka-setup:
    hostname: kafka-setup
    image: ${DATAHUB_KAFKA_SETUP_IMAGE:-acryldata/datahub-kafka-setup}:${DATAHUB_VERSION:-head}
    build:
      dockerfile: ./docker/kafka-setup/Dockerfile
      context: ../
    env_file: kafka-setup/env/docker.env
    environment:
      - KAFKA_BOOTSTRAP_SERVER=redpanda:9092
      - KAFKA_SCHEMAREGISTRY_URL=http://redpanda:8081
      # Disable attempts to configure the internal "_schemas" topic
      # Redpanda manages schema registry topics differently than Confluent
      - USE_CONFLUENT_SCHEMA_REGISTRY=FALSE
    depends_on:
      redpanda:
        condition: service_healthy
    labels:
      datahub_setup_job: true

  mysql-setup:
    hostname: mysql-setup
    image: ${DATAHUB_MYSQL_SETUP_IMAGE:-acryldata/datahub-mysql-setup}:${DATAHUB_VERSION:-head}
    build:
      context: ../
      dockerfile: docker/mysql-setup/Dockerfile
    env_file: mysql-setup/env/docker.env
    depends_on:
      mysql:
        condition: service_healthy
    labels:
      datahub_setup_job: true

  # Use MariaDB on ARM64 platforms like M1/M2 Macs
  mysql:
    hostname: mysql
    image: ${MYSQL_IMAGE:-mysql:8.2}
    platform: ${MYSQL_PLATFORM:-linux/amd64}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --default-authentication-plugin=mysql_native_password
    ports:
      - ${DATAHUB_MAPPED_MYSQL_PORT:-3306}:3306
    env_file: mysql/env/docker.env
    restart: on-failure
    healthcheck:
      test: mysqladmin ping -h mysql -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 20s
      interval: 1s
      retries: 5
      timeout: 5s
    volumes:
      - mysqldata:/var/lib/mysql

  # ElasticSearch (minimal configuration)
  elasticsearch:
    hostname: elasticsearch
    image: ${DATAHUB_SEARCH_IMAGE:-elasticsearch}:${DATAHUB_SEARCH_TAG:-7.10.1}
    ports:
    - ${DATAHUB_MAPPED_ELASTIC_PORT:-9200}:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    healthcheck:
      test: curl -sS --fail http://elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=0s
      start_period: 20s
      interval: 5s
      retries: 3
      timeout: 5s
    volumes:
      - esdata:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 512M

  # Redpanda as a lightweight Kafka replacement
  redpanda:
    image: redpandadata/redpanda:latest
    hostname: redpanda
    container_name: redpanda
    command:
      - redpanda
      - start
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --overprovisioned
      - --node-id=0
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092
      - --rpc-addr=0.0.0.0:33145
      - --advertise-rpc-addr=redpanda:33145
      - --schema-registry-addr=0.0.0.0:8081
    ports:
      - "${DATAHUB_MAPPED_KAFKA_BROKER_PORT:-9092}:9092"
      - "${DATAHUB_MAPPED_SCHEMA_REGISTRY_PORT:-8081}:8081"
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  default:
    name: datahub_network_lightweight

volumes:
  esdata:
  mysqldata: